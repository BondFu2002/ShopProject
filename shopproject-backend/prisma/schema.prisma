// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Product {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  price       Float
  stock       Int      @default(0)
  published   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  imageUrl    String?
  ModifiedBy  User?    @relation("ProductToModifiedByUser", fields: [MId], references: [id]) // 记录最后一次修改该商品的用户
  CreatedBy   User?    @relation("ProductToCreatedByUser", fields: [CId], references: [id]) // 记录创建该商品的用户
  MId         Int? // 记录上一次修改该商品的管理员ID
  CId         Int? // 记录创建该商品的管理员ID
  categoryId  Int      // 外键，关联到 Category 模型的 id
  category    Category @relation(fields: [categoryId], references: [id])
}

model Category {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  products    Product[]
}



model User {
  id               Int       @id @default(autoincrement())
  username         String
  email            String    @unique
  password         String
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  role             String      @default("USER")
  createdProducts  Product[] @relation("ProductToCreatedByUser") // 可选：反向关系字段
  modifiedProducts Product[] @relation("ProductToModifiedByUser") // 可选：反向关系字段
}

model AdminPassword{
  id Int @id @default(autoincrement())
  password String @unique 
}
